ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//cczmCoRX.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main_mode.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "src/mode/main_mode.cpp"
  20              		.section	.text._ZN4Mode8MainModeEv,"ax",%progbits
  21              		.align	1
  22              		.global	_ZN4Mode8MainModeEv
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	_ZN4Mode8MainModeEv:
  28              		.fnstart
  29              	.LVL0:
  30              	.LFB272:
   1:src/mode/main_mode.cpp **** #include "mode.hpp"
   2:src/mode/main_mode.cpp **** 
   3:src/mode/main_mode.cpp **** // cortex-debug用グローバル変数
   4:src/mode/main_mode.cpp **** int yaw;
   5:src/mode/main_mode.cpp **** float voltage;
   6:src/mode/main_mode.cpp **** int process_freq;
   7:src/mode/main_mode.cpp **** int line_dir;
   8:src/mode/main_mode.cpp **** int is_on_line;
   9:src/mode/main_mode.cpp **** int encoder[4];
  10:src/mode/main_mode.cpp **** int debug[2];
  11:src/mode/main_mode.cpp **** 
  12:src/mode/main_mode.cpp **** void Mode::MainMode() {
  31              		.loc 1 12 23 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		.loc 1 12 23 is_stmt 0 view .LVU1
  36 0000 10B5     		push	{r4, lr}
  37              		.save {r4, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 4, -8
  41              		.cfi_offset 14, -4
  42 0002 0446     		mov	r4, r0
  13:src/mode/main_mode.cpp ****       process_timer.reset();
  43              		.loc 1 13 7 is_stmt 1 view .LVU2
  44              		.loc 1 13 26 is_stmt 0 view .LVU3
  45 0004 FFF7FEFF 		bl	_ZN5Timer5resetEv
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//cczmCoRX.s 			page 2


  46              	.LVL1:
  14:src/mode/main_mode.cpp ****       robot->ImuUart();
  47              		.loc 1 14 7 is_stmt 1 view .LVU4
  48              		.loc 1 14 21 is_stmt 0 view .LVU5
  49 0008 6068     		ldr	r0, [r4, #4]
  50 000a FFF7FEFF 		bl	_ZN5Robot7ImuUartEv
  51              	.LVL2:
  15:src/mode/main_mode.cpp ****       robot->LineUart();
  52              		.loc 1 15 7 is_stmt 1 view .LVU6
  53              		.loc 1 15 22 is_stmt 0 view .LVU7
  54 000e 6068     		ldr	r0, [r4, #4]
  55 0010 FFF7FEFF 		bl	_ZN5Robot8LineUartEv
  56              	.LVL3:
  16:src/mode/main_mode.cpp ****       robot->UiUart();
  57              		.loc 1 16 7 is_stmt 1 view .LVU8
  58              		.loc 1 16 20 is_stmt 0 view .LVU9
  59 0014 6068     		ldr	r0, [r4, #4]
  60 0016 FFF7FEFF 		bl	_ZN5Robot6UiUartEv
  61              	.LVL4:
  17:src/mode/main_mode.cpp ****       robot->GetSensors();
  62              		.loc 1 17 7 is_stmt 1 view .LVU10
  63              		.loc 1 17 24 is_stmt 0 view .LVU11
  64 001a 6068     		ldr	r0, [r4, #4]
  65 001c FFF7FEFF 		bl	_ZN5Robot10GetSensorsEv
  66              	.LVL5:
  18:src/mode/main_mode.cpp ****       robot->info.Line.on_led = 1;
  67              		.loc 1 18 7 is_stmt 1 view .LVU12
  68 0020 6368     		ldr	r3, [r4, #4]
  69              		.loc 1 18 31 is_stmt 0 view .LVU13
  70 0022 0122     		movs	r2, #1
  71 0024 9A77     		strb	r2, [r3, #30]
  19:src/mode/main_mode.cpp **** 
  20:src/mode/main_mode.cpp ****       if (robot->info.mode == 0) {
  72              		.loc 1 20 7 is_stmt 1 view .LVU14
  73              		.loc 1 20 11 is_stmt 0 view .LVU15
  74 0026 6068     		ldr	r0, [r4, #4]
  75              		.loc 1 20 23 view .LVU16
  76 0028 037A     		ldrb	r3, [r0, #8]	@ zero_extendqisi2
  77              		.loc 1 20 7 view .LVU17
  78 002a 002B     		cmp	r3, #0
  79 002c 46D0     		beq	.L13
  21:src/mode/main_mode.cpp ****             robot->motor.Free();
  22:src/mode/main_mode.cpp **** 
  23:src/mode/main_mode.cpp ****             if (robot->info.Ui.dribbler_sig == 0) {
  24:src/mode/main_mode.cpp ****                   robot->dribbler_front.Hold(0);
  25:src/mode/main_mode.cpp ****                   robot->dribbler_back.Hold(0);
  26:src/mode/main_mode.cpp ****             } else if (robot->info.Ui.dribbler_sig == 1) {
  27:src/mode/main_mode.cpp ****                   if (robot->info.Catch.is_front) {
  28:src/mode/main_mode.cpp ****                         robot->dribbler_front.Hold(HOLD_MAX_POWER);
  29:src/mode/main_mode.cpp ****                   } else {
  30:src/mode/main_mode.cpp ****                         robot->dribbler_front.Hold(HOLD_WAIT_POWER);
  31:src/mode/main_mode.cpp ****                   }
  32:src/mode/main_mode.cpp ****             } else if (robot->info.Ui.dribbler_sig == 2) {
  33:src/mode/main_mode.cpp ****                   robot->kicker.Kick();
  34:src/mode/main_mode.cpp ****             } else if (robot->info.Ui.dribbler_sig == 3) {
  35:src/mode/main_mode.cpp ****                   if (robot->info.Catch.is_back) {
  36:src/mode/main_mode.cpp ****                         robot->dribbler_back.Hold(HOLD_MAX_POWER);
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//cczmCoRX.s 			page 3


  37:src/mode/main_mode.cpp ****                   } else {
  38:src/mode/main_mode.cpp ****                         robot->dribbler_back.Hold(HOLD_WAIT_POWER);
  39:src/mode/main_mode.cpp ****                   }
  40:src/mode/main_mode.cpp ****             }
  41:src/mode/main_mode.cpp ****       } else if (robot->info.mode == 1) {
  80              		.loc 1 41 14 is_stmt 1 view .LVU18
  81 002e 012B     		cmp	r3, #1
  82 0030 00F08A80 		beq	.L14
  42:src/mode/main_mode.cpp ****             Offence();
  43:src/mode/main_mode.cpp ****       } else if (robot->info.mode == 2) {
  83              		.loc 1 43 14 view .LVU19
  84 0034 022B     		cmp	r3, #2
  85 0036 00F08B80 		beq	.L15
  86              	.L4:
  44:src/mode/main_mode.cpp ****             Defence();
  45:src/mode/main_mode.cpp ****       }
  46:src/mode/main_mode.cpp **** 
  47:src/mode/main_mode.cpp ****       // cortex-debug
  48:src/mode/main_mode.cpp ****       yaw = robot->info.Imu.yaw;
  87              		.loc 1 48 7 view .LVU20
  88              		.loc 1 48 13 is_stmt 0 view .LVU21
  89 003a 6368     		ldr	r3, [r4, #4]
  90              		.loc 1 48 29 view .LVU22
  91 003c B3F92810 		ldrsh	r1, [r3, #40]
  92              		.loc 1 48 11 view .LVU23
  93 0040 454A     		ldr	r2, .L19
  94 0042 1160     		str	r1, [r2]
  49:src/mode/main_mode.cpp ****       voltage = robot->info.voltage;
  95              		.loc 1 49 7 is_stmt 1 view .LVU24
  96              		.loc 1 49 29 is_stmt 0 view .LVU25
  97 0044 1968     		ldr	r1, [r3]	@ float
  98              		.loc 1 49 15 view .LVU26
  99 0046 454A     		ldr	r2, .L19+4
 100 0048 1160     		str	r1, [r2]	@ float
  50:src/mode/main_mode.cpp ****       line_dir = robot->info.Line.dir;
 101              		.loc 1 50 7 is_stmt 1 view .LVU27
 102              		.loc 1 50 35 is_stmt 0 view .LVU28
 103 004a B3F91A10 		ldrsh	r1, [r3, #26]
 104              		.loc 1 50 16 view .LVU29
 105 004e 444A     		ldr	r2, .L19+8
 106 0050 1160     		str	r1, [r2]
  51:src/mode/main_mode.cpp ****       is_on_line = robot->info.Line.is_on_line;
 107              		.loc 1 51 7 is_stmt 1 view .LVU30
 108              		.loc 1 51 37 is_stmt 0 view .LVU31
 109 0052 597D     		ldrb	r1, [r3, #21]	@ zero_extendqisi2
 110              		.loc 1 51 18 view .LVU32
 111 0054 434A     		ldr	r2, .L19+12
 112 0056 1160     		str	r1, [r2]
  52:src/mode/main_mode.cpp **** 
  53:src/mode/main_mode.cpp ****       encoder[0] = robot->info.motor_rps[0];
 113              		.loc 1 53 7 is_stmt 1 view .LVU33
 114              		.loc 1 53 43 is_stmt 0 view .LVU34
 115 0058 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 116              		.loc 1 53 18 view .LVU35
 117 005a 434A     		ldr	r2, .L19+16
 118 005c 1160     		str	r1, [r2]
  54:src/mode/main_mode.cpp ****       encoder[1] = robot->info.motor_rps[1];
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//cczmCoRX.s 			page 4


 119              		.loc 1 54 7 is_stmt 1 view .LVU36
 120              		.loc 1 54 43 is_stmt 0 view .LVU37
 121 005e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 122              		.loc 1 54 18 view .LVU38
 123 0060 5360     		str	r3, [r2, #4]
  55:src/mode/main_mode.cpp ****       encoder[2] = robot->info.motor_rps[2];
 124              		.loc 1 55 7 is_stmt 1 view .LVU39
 125              		.loc 1 55 20 is_stmt 0 view .LVU40
 126 0062 6368     		ldr	r3, [r4, #4]
 127              		.loc 1 55 43 view .LVU41
 128 0064 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 129              		.loc 1 55 18 view .LVU42
 130 0066 9360     		str	r3, [r2, #8]
  56:src/mode/main_mode.cpp ****       encoder[3] = robot->info.motor_rps[3];
 131              		.loc 1 56 7 is_stmt 1 view .LVU43
 132              		.loc 1 56 20 is_stmt 0 view .LVU44
 133 0068 6368     		ldr	r3, [r4, #4]
 134              		.loc 1 56 43 view .LVU45
 135 006a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 136              		.loc 1 56 18 view .LVU46
 137 006c D360     		str	r3, [r2, #12]
  57:src/mode/main_mode.cpp **** 
  58:src/mode/main_mode.cpp ****       debug[0] = robot->info.Catch.front_val;
 138              		.loc 1 58 7 is_stmt 1 view .LVU47
 139              		.loc 1 58 18 is_stmt 0 view .LVU48
 140 006e 6268     		ldr	r2, [r4, #4]
 141              		.loc 1 58 36 view .LVU49
 142 0070 118C     		ldrh	r1, [r2, #32]
 143              		.loc 1 58 16 view .LVU50
 144 0072 3E4B     		ldr	r3, .L19+20
 145 0074 1960     		str	r1, [r3]
  59:src/mode/main_mode.cpp ****       debug[1] = robot->info.Catch.back_val;
 146              		.loc 1 59 7 is_stmt 1 view .LVU51
 147              		.loc 1 59 36 is_stmt 0 view .LVU52
 148 0076 928C     		ldrh	r2, [r2, #36]
 149              		.loc 1 59 16 view .LVU53
 150 0078 5A60     		str	r2, [r3, #4]
  60:src/mode/main_mode.cpp **** 
  61:src/mode/main_mode.cpp ****       //  定周期処理
  62:src/mode/main_mode.cpp ****       process_time_ = process_timer.read_us();
 151              		.loc 1 62 7 is_stmt 1 view .LVU54
 152              		.loc 1 62 44 is_stmt 0 view .LVU55
 153 007a 2046     		mov	r0, r4
 154 007c FFF7FEFF 		bl	_ZN5Timer7read_usEv
 155              	.LVL6:
 156              		.loc 1 62 21 view .LVU56
 157 0080 80B2     		uxth	r0, r0
 158 0082 2081     		strh	r0, [r4, #8]	@ movhi
  63:src/mode/main_mode.cpp ****       if (process_time_ < PERIOD_US) {
 159              		.loc 1 63 7 is_stmt 1 view .LVU57
 160 0084 C728     		cmp	r0, #199
 161 0086 04D8     		bhi	.L10
 162              	.L11:
  64:src/mode/main_mode.cpp ****             while (process_timer.read_us() < PERIOD_US);
 163              		.loc 1 64 44 discriminator 1 view .LVU58
 164              		.loc 1 64 41 is_stmt 0 discriminator 1 view .LVU59
 165 0088 2046     		mov	r0, r4
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//cczmCoRX.s 			page 5


 166 008a FFF7FEFF 		bl	_ZN5Timer7read_usEv
 167              	.LVL7:
 168              		.loc 1 64 44 discriminator 1 view .LVU60
 169 008e C728     		cmp	r0, #199
 170 0090 FAD9     		bls	.L11
 171              	.L10:
  65:src/mode/main_mode.cpp ****       }
  66:src/mode/main_mode.cpp ****       process_freq = 1.0f / (process_timer.read_us() * 0.000001f);
 172              		.loc 1 66 7 is_stmt 1 view .LVU61
 173              		.loc 1 66 51 is_stmt 0 view .LVU62
 174 0092 2046     		mov	r0, r4
 175 0094 FFF7FEFF 		bl	_ZN5Timer7read_usEv
 176              	.LVL8:
 177 0098 07EE900A 		vmov	s15, r0	@ int
 178              		.loc 1 66 54 view .LVU63
 179 009c F8EE677A 		vcvt.f32.u32	s15, s15
 180 00a0 9FED337A 		vldr.32	s14, .L19+24
 181 00a4 67EE877A 		vmul.f32	s15, s15, s14
 182              		.loc 1 66 27 view .LVU64
 183 00a8 F7EE006A 		vmov.f32	s13, #1.0e+0
 184 00ac 86EEA77A 		vdiv.f32	s14, s13, s15
 185              		.loc 1 66 20 view .LVU65
 186 00b0 BDEEC77A 		vcvt.s32.f32	s14, s14
 187 00b4 2F4B     		ldr	r3, .L19+28
 188 00b6 83ED007A 		vstr.32	s14, [r3]	@ int
  67:src/mode/main_mode.cpp **** }...
 189              		.loc 1 67 1 view .LVU66
 190 00ba 10BD     		pop	{r4, pc}
 191              	.LVL9:
 192              	.L13:
  21:src/mode/main_mode.cpp ****             robot->motor.Free();
 193              		.loc 1 21 13 is_stmt 1 view .LVU67
  21:src/mode/main_mode.cpp ****             robot->motor.Free();
 194              		.loc 1 21 30 is_stmt 0 view .LVU68
 195 00bc 00F58C70 		add	r0, r0, #280
 196 00c0 FFF7FEFF 		bl	_ZN10MotorDrive4FreeEv
 197              	.LVL10:
  23:src/mode/main_mode.cpp ****             if (robot->info.Ui.dribbler_sig == 0) {
 198              		.loc 1 23 13 is_stmt 1 view .LVU69
  23:src/mode/main_mode.cpp ****             if (robot->info.Ui.dribbler_sig == 0) {
 199              		.loc 1 23 17 is_stmt 0 view .LVU70
 200 00c4 6068     		ldr	r0, [r4, #4]
  23:src/mode/main_mode.cpp ****             if (robot->info.Ui.dribbler_sig == 0) {
 201              		.loc 1 23 32 view .LVU71
 202 00c6 90F82F30 		ldrb	r3, [r0, #47]	@ zero_extendqisi2
  23:src/mode/main_mode.cpp ****             if (robot->info.Ui.dribbler_sig == 0) {
 203              		.loc 1 23 13 view .LVU72
 204 00ca 7BB1     		cbz	r3, .L16
  26:src/mode/main_mode.cpp ****             } else if (robot->info.Ui.dribbler_sig == 1) {
 205              		.loc 1 26 20 is_stmt 1 view .LVU73
 206 00cc 012B     		cmp	r3, #1
 207 00ce 1BD0     		beq	.L17
  32:src/mode/main_mode.cpp ****             } else if (robot->info.Ui.dribbler_sig == 2) {
 208              		.loc 1 32 20 view .LVU74
 209 00d0 022B     		cmp	r3, #2
 210 00d2 2AD0     		beq	.L18
  34:src/mode/main_mode.cpp ****             } else if (robot->info.Ui.dribbler_sig == 3) {
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//cczmCoRX.s 			page 6


 211              		.loc 1 34 20 view .LVU75
 212 00d4 032B     		cmp	r3, #3
 213 00d6 B0D1     		bne	.L4
  35:src/mode/main_mode.cpp ****                   if (robot->info.Catch.is_back) {
 214              		.loc 1 35 19 view .LVU76
  35:src/mode/main_mode.cpp ****                   if (robot->info.Catch.is_back) {
 215              		.loc 1 35 41 is_stmt 0 view .LVU77
 216 00d8 90F82630 		ldrb	r3, [r0, #38]	@ zero_extendqisi2
  35:src/mode/main_mode.cpp ****                   if (robot->info.Catch.is_back) {
 217              		.loc 1 35 19 view .LVU78
 218 00dc 6BB3     		cbz	r3, .L8
  36:src/mode/main_mode.cpp ****                         robot->dribbler_back.Hold(HOLD_MAX_POWER);
 219              		.loc 1 36 25 is_stmt 1 view .LVU79
  36:src/mode/main_mode.cpp ****                         robot->dribbler_back.Hold(HOLD_MAX_POWER);
 220              		.loc 1 36 50 is_stmt 0 view .LVU80
 221 00de 6421     		movs	r1, #100
 222 00e0 00F59A50 		add	r0, r0, #4928
 223 00e4 0830     		adds	r0, r0, #8
 224 00e6 FFF7FEFF 		bl	_ZN13DribblerDrive4HoldEh
 225              	.LVL11:
 226 00ea A6E7     		b	.L4
 227              	.L16:
  24:src/mode/main_mode.cpp ****                   robot->dribbler_front.Hold(0);
 228              		.loc 1 24 19 is_stmt 1 view .LVU81
  24:src/mode/main_mode.cpp ****                   robot->dribbler_front.Hold(0);
 229              		.loc 1 24 45 is_stmt 0 view .LVU82
 230 00ec 0021     		movs	r1, #0
 231 00ee 00F58050 		add	r0, r0, #4096
 232 00f2 0830     		adds	r0, r0, #8
 233 00f4 FFF7FEFF 		bl	_ZN13DribblerDrive4HoldEh
 234              	.LVL12:
  25:src/mode/main_mode.cpp ****                   robot->dribbler_back.Hold(0);
 235              		.loc 1 25 19 is_stmt 1 view .LVU83
 236 00f8 6068     		ldr	r0, [r4, #4]
  25:src/mode/main_mode.cpp ****                   robot->dribbler_back.Hold(0);
 237              		.loc 1 25 44 is_stmt 0 view .LVU84
 238 00fa 0021     		movs	r1, #0
 239 00fc 00F59A50 		add	r0, r0, #4928
 240 0100 0830     		adds	r0, r0, #8
 241 0102 FFF7FEFF 		bl	_ZN13DribblerDrive4HoldEh
 242              	.LVL13:
 243 0106 98E7     		b	.L4
 244              	.L17:
  27:src/mode/main_mode.cpp ****                   if (robot->info.Catch.is_front) {
 245              		.loc 1 27 19 is_stmt 1 view .LVU85
  27:src/mode/main_mode.cpp ****                   if (robot->info.Catch.is_front) {
 246              		.loc 1 27 41 is_stmt 0 view .LVU86
 247 0108 90F82230 		ldrb	r3, [r0, #34]	@ zero_extendqisi2
  27:src/mode/main_mode.cpp ****                   if (robot->info.Catch.is_front) {
 248              		.loc 1 27 19 view .LVU87
 249 010c 33B1     		cbz	r3, .L6
  28:src/mode/main_mode.cpp ****                         robot->dribbler_front.Hold(HOLD_MAX_POWER);
 250              		.loc 1 28 25 is_stmt 1 view .LVU88
  28:src/mode/main_mode.cpp ****                         robot->dribbler_front.Hold(HOLD_MAX_POWER);
 251              		.loc 1 28 51 is_stmt 0 view .LVU89
 252 010e 6421     		movs	r1, #100
 253 0110 00F58050 		add	r0, r0, #4096
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//cczmCoRX.s 			page 7


 254 0114 0830     		adds	r0, r0, #8
 255 0116 FFF7FEFF 		bl	_ZN13DribblerDrive4HoldEh
 256              	.LVL14:
 257 011a 8EE7     		b	.L4
 258              	.L6:
  30:src/mode/main_mode.cpp ****                         robot->dribbler_front.Hold(HOLD_WAIT_POWER);
 259              		.loc 1 30 25 is_stmt 1 view .LVU90
  30:src/mode/main_mode.cpp ****                         robot->dribbler_front.Hold(HOLD_WAIT_POWER);
 260              		.loc 1 30 51 is_stmt 0 view .LVU91
 261 011c 3221     		movs	r1, #50
 262 011e 00F58050 		add	r0, r0, #4096
 263 0122 0830     		adds	r0, r0, #8
 264 0124 FFF7FEFF 		bl	_ZN13DribblerDrive4HoldEh
 265              	.LVL15:
 266 0128 87E7     		b	.L4
 267              	.L18:
  33:src/mode/main_mode.cpp ****                   robot->kicker.Kick();
 268              		.loc 1 33 19 is_stmt 1 view .LVU92
  33:src/mode/main_mode.cpp ****                   robot->kicker.Kick();
 269              		.loc 1 33 37 is_stmt 0 view .LVU93
 270 012a B7EE000A 		vmov.f32	s0, #1.0e+0
 271 012e 00F5B450 		add	r0, r0, #5760
 272 0132 0830     		adds	r0, r0, #8
 273 0134 FFF7FEFF 		bl	_ZN6Kicker4KickEf
 274              	.LVL16:
 275 0138 7FE7     		b	.L4
 276              	.L8:
  38:src/mode/main_mode.cpp ****                         robot->dribbler_back.Hold(HOLD_WAIT_POWER);
 277              		.loc 1 38 25 is_stmt 1 view .LVU94
  38:src/mode/main_mode.cpp ****                         robot->dribbler_back.Hold(HOLD_WAIT_POWER);
 278              		.loc 1 38 50 is_stmt 0 view .LVU95
 279 013a 3221     		movs	r1, #50
 280 013c 00F59A50 		add	r0, r0, #4928
 281 0140 0830     		adds	r0, r0, #8
 282 0142 FFF7FEFF 		bl	_ZN13DribblerDrive4HoldEh
 283              	.LVL17:
 284 0146 78E7     		b	.L4
 285              	.L14:
  42:src/mode/main_mode.cpp ****             Offence();
 286              		.loc 1 42 13 is_stmt 1 view .LVU96
  42:src/mode/main_mode.cpp ****             Offence();
 287              		.loc 1 42 20 is_stmt 0 view .LVU97
 288 0148 2046     		mov	r0, r4
 289 014a FFF7FEFF 		bl	_ZN4Mode7OffenceEv
 290              	.LVL18:
 291 014e 74E7     		b	.L4
 292              	.L15:
  44:src/mode/main_mode.cpp ****             Defence();
 293              		.loc 1 44 13 is_stmt 1 view .LVU98
  44:src/mode/main_mode.cpp ****             Defence();
 294              		.loc 1 44 20 is_stmt 0 view .LVU99
 295 0150 2046     		mov	r0, r4
 296 0152 FFF7FEFF 		bl	_ZN4Mode7DefenceEv
 297              	.LVL19:
 298 0156 70E7     		b	.L4
 299              	.L20:
 300              		.align	2
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//cczmCoRX.s 			page 8


 301              	.L19:
 302 0158 00000000 		.word	yaw
 303 015c 00000000 		.word	voltage
 304 0160 00000000 		.word	line_dir
 305 0164 00000000 		.word	is_on_line
 306 0168 00000000 		.word	encoder
 307 016c 00000000 		.word	debug
 308 0170 BD378635 		.word	897988541
 309 0174 00000000 		.word	process_freq
 310              		.cfi_endproc
 311              	.LFE272:
 312              		.fnend
 314              		.global	debug
 315              		.section	.bss.debug,"aw",%nobits
 316              		.align	2
 319              	debug:
 320 0000 00000000 		.space	8
 320      00000000 
 321              		.global	encoder
 322              		.section	.bss.encoder,"aw",%nobits
 323              		.align	2
 326              	encoder:
 327 0000 00000000 		.space	16
 327      00000000 
 327      00000000 
 327      00000000 
 328              		.global	is_on_line
 329              		.section	.bss.is_on_line,"aw",%nobits
 330              		.align	2
 333              	is_on_line:
 334 0000 00000000 		.space	4
 335              		.global	line_dir
 336              		.section	.bss.line_dir,"aw",%nobits
 337              		.align	2
 340              	line_dir:
 341 0000 00000000 		.space	4
 342              		.global	process_freq
 343              		.section	.bss.process_freq,"aw",%nobits
 344              		.align	2
 347              	process_freq:
 348 0000 00000000 		.space	4
 349              		.global	voltage
 350              		.section	.bss.voltage,"aw",%nobits
 351              		.align	2
 354              	voltage:
 355 0000 00000000 		.space	4
 356              		.global	yaw
 357              		.section	.bss.yaw,"aw",%nobits
 358              		.align	2
 361              	yaw:
 362 0000 00000000 		.space	4
 363              		.text
 364              	.Letext0:
 365              		.file 2 "/opt/ST/STM32CubeCLT_1.16.0/GNU-tools-for-STM32/arm-none-eabi/include/machine/_default_ty
 366              		.file 3 "/opt/ST/STM32CubeCLT_1.16.0/GNU-tools-for-STM32/lib/gcc/arm-none-eabi/12.3.1/include/stdd
 367              		.file 4 "/opt/ST/STM32CubeCLT_1.16.0/GNU-tools-for-STM32/arm-none-eabi/include/sys/_types.h"
 368              		.file 5 "/opt/ST/STM32CubeCLT_1.16.0/GNU-tools-for-STM32/arm-none-eabi/include/sys/reent.h"
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//cczmCoRX.s 			page 9


 369              		.file 6 "/opt/ST/STM32CubeCLT_1.16.0/GNU-tools-for-STM32/arm-none-eabi/include/sys/lock.h"
 370              		.file 7 "/opt/ST/STM32CubeCLT_1.16.0/GNU-tools-for-STM32/arm-none-eabi/include/stdio.h"
 371              		.file 8 "/opt/ST/STM32CubeCLT_1.16.0/GNU-tools-for-STM32/arm-none-eabi/include/sys/_stdint.h"
 372              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 373              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 374              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 375              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 376              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 377              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 378              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 379              		.file 16 "Lib/BufferedSerial/BufferedSerial.hpp"
 380              		.file 17 "Lib/DigitalInOut/DigitalInOut.hpp"
 381              		.file 18 "Lib/MovingAve/MovingAve.hpp"
 382              		.file 19 "/opt/ST/STM32CubeCLT_1.16.0/GNU-tools-for-STM32/arm-none-eabi/include/c++/12.3.1/cstdio"
 383              		.file 20 "/opt/ST/STM32CubeCLT_1.16.0/GNU-tools-for-STM32/arm-none-eabi/include/c++/12.3.1/arm-non
 384              		.file 21 "Lib/PWMSingle/PWMSingle.hpp"
 385              		.file 22 "Lib/Timer/Timer.hpp"
 386              		.file 23 "src/unit/dribbler_drive/dribbler_drive.hpp"
 387              		.file 24 "src/unit/kicker/kicker.hpp"
 388              		.file 25 "Lib/pid/pid.hpp"
 389              		.file 26 "src/unit/motor_drive/motor_drive.hpp"
 390              		.file 27 "src/unit/robot/robot.hpp"
 391              		.file 28 "src/mode/mode.hpp"
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//cczmCoRX.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 main_mode.cpp
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//cczmCoRX.s:21     .text._ZN4Mode8MainModeEv:00000000 $t
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//cczmCoRX.s:27     .text._ZN4Mode8MainModeEv:00000000 _ZN4Mode8MainModeEv
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//cczmCoRX.s:302    .text._ZN4Mode8MainModeEv:00000158 $d
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//cczmCoRX.s:361    .bss.yaw:00000000 yaw
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//cczmCoRX.s:354    .bss.voltage:00000000 voltage
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//cczmCoRX.s:340    .bss.line_dir:00000000 line_dir
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//cczmCoRX.s:333    .bss.is_on_line:00000000 is_on_line
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//cczmCoRX.s:326    .bss.encoder:00000000 encoder
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//cczmCoRX.s:319    .bss.debug:00000000 debug
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//cczmCoRX.s:347    .bss.process_freq:00000000 process_freq
.ARM.exidx.text._ZN4Mode8MainModeEv:00000000 $d
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//cczmCoRX.s:316    .bss.debug:00000000 $d
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//cczmCoRX.s:323    .bss.encoder:00000000 $d
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//cczmCoRX.s:330    .bss.is_on_line:00000000 $d
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//cczmCoRX.s:337    .bss.line_dir:00000000 $d
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//cczmCoRX.s:344    .bss.process_freq:00000000 $d
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//cczmCoRX.s:351    .bss.voltage:00000000 $d
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//cczmCoRX.s:358    .bss.yaw:00000000 $d

UNDEFINED SYMBOLS
_ZN5Timer5resetEv
_ZN5Robot7ImuUartEv
_ZN5Robot8LineUartEv
_ZN5Robot6UiUartEv
_ZN5Robot10GetSensorsEv
_ZN5Timer7read_usEv
_ZN10MotorDrive4FreeEv
_ZN13DribblerDrive4HoldEh
_ZN6Kicker4KickEf
_ZN4Mode7OffenceEv
_ZN4Mode7DefenceEv
__aeabi_unwind_cpp_pr0
